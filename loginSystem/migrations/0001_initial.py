# Generated by Django 4.0.3 on 2022-05-05 19:24

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('firstname', models.CharField(max_length=100, verbose_name='First name')),
                ('lastname', models.CharField(max_length=100, verbose_name='Last name')),
                ('date_of_birth', models.DateField(null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('clubChoice', models.CharField(default=None, max_length=254, null=True, verbose_name='club name')),
                ('cardNumber', models.CharField(blank=True, max_length=16, verbose_name='Card Number')),
                ('expiryDate', models.CharField(blank=True, max_length=5, verbose_name='Expiry Date')),
                ('cvv', models.CharField(blank=True, max_length=3, verbose_name='CVV')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Club',
            fields=[
                ('club_id', models.UUIDField(default=uuid.UUID('d9814ce1-1a22-4d3f-8673-6f9e4cbd7259'), primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=40)),
                ('street_num', models.CharField(max_length=10)),
                ('street_name', models.CharField(max_length=30)),
                ('city', models.CharField(max_length=20)),
                ('post_code', models.CharField(max_length=10)),
                ('email', models.CharField(max_length=100)),
                ('landline_num', models.CharField(max_length=30)),
                ('mobile_num', models.CharField(max_length=30)),
            ],
            options={
                'ordering': ['name'],
            },
            managers=[
                ('clubs', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Film',
            fields=[
                ('film_id', models.UUIDField(default=uuid.UUID('ac3cbe0d-53a7-4be9-9dc6-a6c24de246f8'), primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=1000)),
                ('age_rating', models.CharField(max_length=5)),
                ('duration', models.CharField(max_length=10)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
            ],
            options={
                'ordering': ['title'],
            },
            managers=[
                ('films', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='FinanceAccount',
            fields=[
                ('account_id', models.UUIDField(default=uuid.UUID('a3780311-d795-4472-9431-f3d92304540e'), primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=40)),
                ('card_num', models.CharField(max_length=20)),
                ('expiry_date', models.CharField(max_length=10)),
                ('discount_rate', models.FloatField(default=1.0)),
            ],
            options={
                'ordering': ['title'],
            },
            managers=[
                ('accounts', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Screen',
            fields=[
                ('screen_id', models.UUIDField(default=uuid.UUID('0bec889a-b3cf-4add-bdb1-0c5ee0aafe1f'), primary_key=True, serialize=False, unique=True)),
                ('number', models.CharField(max_length=3, unique=True)),
                ('social_distancing', models.BooleanField(blank=True, default=False)),
            ],
            options={
                'ordering': ['number'],
            },
            managers=[
                ('screens', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='UserCredit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('credits', models.IntegerField(default=0)),
                ('discount_rate', models.DecimalField(decimal_places=2, default=1.0, max_digits=3)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('transactionID', models.UUIDField(default=uuid.UUID('8939c99b-5be2-49b4-91fd-0aeca28ce817'), editable=False, primary_key=True, serialize=False, unique=True)),
                ('transactionType', models.CharField(max_length=6, verbose_name='Currency')),
                ('transactionPurpose', models.CharField(max_length=50, verbose_name='Purpose')),
                ('transactionTotal', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Total spent')),
                ('cardName', models.CharField(blank=True, max_length=50, verbose_name='Payee Name')),
                ('cardNumber', models.CharField(blank=True, max_length=16, verbose_name='Card Number')),
                ('expiryDate', models.CharField(blank=True, max_length=5, verbose_name='Expiry Date')),
                ('cvv', models.CharField(blank=True, max_length=3, verbose_name='CVV')),
                ('date', models.DateTimeField(auto_now=True)),
                ('payee', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['date'],
            },
            managers=[
                ('transactions', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Showing',
            fields=[
                ('showing_id', models.UUIDField(default=uuid.UUID('3c9d6f07-e605-45d7-860e-6e48ecbaa67c'), primary_key=True, serialize=False, unique=True)),
                ('start_time', models.DateTimeField()),
                ('price', models.FloatField(default=0.0)),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='loginSystem.film')),
                ('screen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='loginSystem.screen')),
            ],
            options={
                'ordering': ['start_time'],
            },
            managers=[
                ('showings', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Seat',
            fields=[
                ('seat_id', models.UUIDField(default=uuid.UUID('98cbc9db-6f20-4d3c-899c-a4b7f19165b2'), primary_key=True, serialize=False, unique=True)),
                ('vip', models.BooleanField(default=False)),
                ('row', models.IntegerField()),
                ('column', models.IntegerField()),
                ('screen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='loginSystem.screen')),
            ],
            options={
                'ordering': ['row'],
            },
            managers=[
                ('seats', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('booking_id', models.UUIDField(default=uuid.UUID('7124a69e-f52c-4557-86c1-0a98c942956a'), primary_key=True, serialize=False, unique=True)),
                ('booking_type', models.CharField(default='purchase', max_length=10)),
                ('total_spent', models.FloatField(default=0.0, max_length=10, verbose_name='Total spent')),
                ('associatedEmail', models.EmailField(blank=True, max_length=254, verbose_name='associated email')),
                ('cancellationMarker', models.BooleanField(default=False, verbose_name='cancellation request?')),
                ('credit_acc', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='credit_account', to='loginSystem.usercredit')),
                ('seats', models.ManyToManyField(related_name='booking_seats', to='loginSystem.seat')),
                ('showing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='loginSystem.showing')),
            ],
            managers=[
                ('bookings', django.db.models.manager.Manager()),
            ],
        ),
    ]
